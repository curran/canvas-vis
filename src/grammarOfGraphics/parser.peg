// See Wilkinson's Grammar of Graphics p. 38

start
  = statements:statement* {return {type:"statements", statements:statements}}

statement
  = data
  / statementType:statementType ":" " "* expr:expr "\n"*
    {return {type:"statement", statementType:statementType, expr:expr};}

data
  = "DATA:" " "* da:dataAssignment "\n"* {
    return {
      type:"data", 
      oldName:da.right.value,
      newName:da.left.name
    };
  }

dataAssignment
  = left:name " "* "=" " "* right:string
  { return {type:"assignment", left:left, right:right}}

statementType
  = chars:[A-Z]* { return chars.join(""); }

expr
  = function
  / assignment
  / cross
  / name
  / number
  / string

function
  = name:([a-z]/".")+ args:args
    {return {type:"function", name:name.join(""), args:args};}

args = "(" " "* args:arg* " "* ")" { return args; }

arg = expr:expr /" "* "," " "*  expr:expr { return expr; }

assignment
  = left:name " "* "=" " "* right:expr { return {type:"assignment", left:left, right:right}}

name
  = chars:([a-z]/[A-Z])+ { return {type:"name", name:chars.join("")}; }

number
  = chars:[0-9]+ { return {type:"number", value:parseFloat(chars.join(""))}; }

string
  = '"' chars:[^"]* '"'
    { return {type:"string", value:chars.join("")}; }

cross
  = left:name " "* "*" " "* right:name
  { return {type:"cross", left:left, right:right}}



