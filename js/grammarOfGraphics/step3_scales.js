//@ sourceMappingURL=step3_scales.map
// Generated by CoffeeScript 1.6.1
(function() {

  define(['cv/match', 'cv/grammarOfGraphics/printTree', 'cv/Varset'], function(match, printTree, Varset) {
    var step3;
    return step3 = match('type', 'step3', {
      'statements': function(stmts) {
        var scales, stmt;
        scales = (function() {
          var _i, _len, _ref, _results;
          _ref = stmts.statements;
          _results = [];
          for (_i = 0, _len = _ref.length; _i < _len; _i++) {
            stmt = _ref[_i];
            _results.push(step3(stmt));
          }
          return _results;
        })();
        return _.extend.apply(null, scales);
      },
      'data': function(data) {
        return {};
      },
      'statement': match('statementType', 'step3.statement', {
        ELEMENT: function(stmt) {
          return {};
        },
        TRANS: function(stmt) {
          return {};
        },
        SCALE: function(stmt) {
          return step3(stmt.expr);
        },
        COORD: function(stmt) {
          return {};
        },
        GUIDE: function(stmt) {
          return {};
        }
      }),
      'function': match('name', 'step3.function', {
        'linear': function(fn) {
          var dim, result;
          if (fn.args.length !== 1) {
            throw Error('linear() expects one argument');
          }
          dim = step3(fn.args[0]);
          result = {};
          result[dim] = {
            type: 'linear'
          };
          return result;
        },
        'dim': function(fn) {
          if (fn.args.length !== 1) {
            throw Error('dim() expects one argument');
          }
          if (fn.args[0].type !== 'number') {
            throw Error('dim() expects a numeric argument');
          }
          return fn.args[0].value;
        }
      })
    });
  });

}).call(this);
