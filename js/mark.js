//@ sourceMappingURL=mark.map
// Generated by CoffeeScript 1.6.1
(function() {

  define(['cv/Rectangle', 'cv/Point'], function(Rectangle, Point) {
    var defaults, destPt, mark, p, shape, shapes, singleton, srcPt;
    mark = function() {
      _.extend(p, defaults);
      return singleton;
    };
    p = {};
    defaults = {
      bounds: new Rectangle,
      fillStyle: 'black',
      shape: 'square',
      rotation: 0
    };
    singleton = {
      shape: function(shape) {
        p.shape = shape;
        return this;
      },
      fillStyle: function(cssColorStr) {
        p.fillStyle = cssColorStr;
        return this;
      },
      size: function(w, h) {
        if (h == null) {
          h = w;
        }
        p.bounds.w = w;
        p.bounds.h = h;
        return this;
      },
      x: function(x) {
        p.bounds.x = x;
        return this;
      },
      y: function(y) {
        p.bounds.y = y;
        return this;
      },
      w: function(w) {
        p.bounds.w = w;
        return this;
      },
      h: function(h) {
        p.bounds.h = h;
        return this;
      },
      rotation: function(rotation) {
        p.rotation = rotation;
        return this;
      },
      getBounds: function() {
        return shape().bounds();
      },
      render: function(ctx, viewport) {
        return shape().render(ctx, viewport);
      }
    };
    shape = function() {
      if (!shapes[p.shape]) {
        throw Error("Unknown shape type '" + p.shape + "'");
      }
      return shapes[p.shape];
    };
    srcPt = new Point;
    destPt = new Point;
    shapes = {
      square: {
        bounds: function() {
          return p.bounds.clone();
        },
        render: function(ctx, viewport) {
          ctx.fillStyle = p.fillStyle;
          srcPt.x = p.bounds.x;
          srcPt.y = p.bounds.y;
          viewport.srcToDest(srcPt, destPt);
          return ctx.fillRect(destPt.x, destPt.y, 5, 5);
        }
      }
    };
    return mark;
  });

}).call(this);
