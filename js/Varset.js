//@ sourceMappingURL=Varset.map
// Generated by CoffeeScript 1.6.1
(function() {

  define([], function() {
    var Varset;
    Varset = (function() {

      function Varset() {
        this._orderedKeys = [];
        this._orderedTuples = [];
        this._keysToTuples = {};
      }

      Varset.prototype.insert = function(key, tuple) {
        this._orderedKeys.push(key);
        this._orderedTuples.push(tuple);
        return this._keysToTuples[key] = tuple;
      };

      Varset.prototype.keys = function() {
        return this._orderedKeys;
      };

      Varset.prototype.tuples = function() {
        return this._orderedTuples;
      };

      Varset.prototype.tuple = function(key) {
        return this._keysToTuples[key];
      };

      Varset.prototype.type = 'varset';

      return Varset;

    })();
    Varset.fromVariable = function(variable) {
      var key, result, tuple, _i, _len, _ref;
      result = new Varset;
      _ref = variable.keys();
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        key = _ref[_i];
        tuple = [variable.value(key)];
        result.insert(key, tuple);
      }
      return result;
    };
    Varset.cross = function(a, b) {
      var key, keys, result, tuple, _i, _len;
      result = new Varset;
      keys = _.union(a.keys(), b.keys());
      for (_i = 0, _len = keys.length; _i < _len; _i++) {
        key = keys[_i];
        tuple = (a.tuple(key)).concat(b.tuple(key));
        result.insert(key, tuple);
      }
      return result;
    };
    return Varset;
  });

}).call(this);
