//@ sourceMappingURL=Relation.map
// Generated by CoffeeScript 1.6.1
(function() {

  define(['cv/expose'], function(expose) {
    var Attribute, Relation, Tuple;
    Relation = Backbone.Model.extend({
      initialize: function() {
        this.attributes = new Backbone.Collection;
        return this.tuples = new Backbone.Collection;
      },
      addAttribute: function(name) {
        return this.attributes.add(new Attribute({
          name: name
        }));
      },
      addTuple: function(values) {
        return this.tuples.add(new Tuple({
          values: values
        }));
      },
      computeMinMax: function() {
        var _this = this;
        return this.attributes.each(function(attribute) {
          var maxTuple, minTuple, name, _ref, _ref1;
          name = attribute.name;
          minTuple = _this.tuples.min(function(tuple) {
            return tuple.values[name];
          });
          attribute.min = (_ref = minTuple.values) != null ? _ref[name] : void 0;
          maxTuple = _this.tuples.max(function(tuple) {
            return tuple.values[name];
          });
          return attribute.max = (_ref1 = maxTuple.values) != null ? _ref1[name] : void 0;
        });
      },
      select: function(test) {
        var result;
        result = new Relation;
        this.attributes.each(function(attr) {
          return result.addAttribute(attr.name);
        });
        result.tuples.add(this.tuples.filter(function(tuple) {
          return test(tuple.values);
        }));
        return result;
      },
      project: function(attrNames) {
        var name, result, _i, _len;
        result = new Relation;
        for (_i = 0, _len = attrNames.length; _i < _len; _i++) {
          name = attrNames[_i];
          result.addAttribute(name);
        }
        this.tuples.each(function(tuple) {
          return result.addTuple(_.pick(tuple.values, attrNames));
        });
        return result;
      }
    });
    Tuple = Backbone.Model.extend({
      initialize: function() {
        return expose(this, 'values');
      }
    });
    Attribute = Backbone.Model.extend({
      initialize: function() {
        return expose(this, 'name', 'min', 'max');
      }
    });
    Relation.Attribute = Attribute;
    Relation.Tuple = Tuple;
    return Relation;
  });

}).call(this);
